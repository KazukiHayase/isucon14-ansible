- name: Install New Relic
  hosts: all
  roles:
    - role: newrelic.newrelic_install
  vars_files:
    - vars.yml
  vars:
    targets:
      - infrastructure
      - logs
      - nginx
  environment:
    NEW_RELIC_API_KEY: "{{ new_relic_api_key }}"
    NEW_RELIC_ACCOUNT_ID: "{{ new_relic_account_id }}"
    NEW_RELIC_REGION: "{{ new_relic_region }}"

- name: Setup Git
  hosts: all
  vars_files:
    - vars.yml
  become: yes

  tasks:
    - name: Install Git
      apt:
        name: git
        state: present

    # Gitのグローバル設定
    - name: Configure Git global user name
      git_config:
        name: user.name
        value: "{{ git_user_name }}"
        scope: global

    - name: Configure Git global user email
      git_config:
        name: user.email
        value: "{{ git_user_email }}"
        scope: global

    # SSH鍵の配置
    - name: Create SSH directory
      file:
        path: ~/.ssh
        state: directory
        mode: '0700'

    - name: Copy SSH private key
      copy:
        src: .ssh/id_rsa
        dest: ~/.ssh/id_rsa
        mode: '0600'

    - name: Copy SSH public key
      copy:
        src: .ssh/id_rsa.pub
        dest: ~/.ssh/id_rsa.pub
        mode: '0644'

    - name: Add GitHub to known_hosts
      shell: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      args:
        creates: ~/.ssh/known_hosts

- name: Setup Remote Repository and Symbolic Links for host1
  hosts: host1
  vars_files:
    - vars.yml
  become: yes

  tasks:
    # .gitが存在するかチェック
    - name: Check if the repository is already initialized
      stat:
        path: "{{ working_dir }}/.git"
      register: repo_status

    # リモートリポジトリのセットアップ
    - name: Setup Git remote repository
      shell: |
        git init
        git config --global --add safe.directory {{ working_dir }}
        git remote add origin {{ git_repo_path }}
        git add .
        git commit -m "initial commit"
        git branch -M main
        git push -u origin main
      args:
        chdir: "{{ working_dir }}"
      when: not repo_status.stat.exists

    - name: Create directories for symbolic links
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ working_dir }}/nginx"
        - "{{ working_dir }}/mysql"

    - name: Check if nginx.conf exists
      stat:
        path: "{{ working_dir }}/nginx/nginx_1.conf"
      register: nginx_conf_status

    - name: Copy and link nginx.conf
      block:
        # バックアップ用にコピー
        - name: Copy nginx.conf for backup
          copy:
            src: /etc/nginx/nginx.conf
            dest: /etc/nginx/nginx.conf.bak
            remote_src: yes

        - name: Copy nginx.conf to target directory
          copy:
            src: /etc/nginx/nginx.conf
            dest: "{{ working_dir }}/nginx/nginx_1.conf"
            remote_src: yes

        - name: Create symbolic link for nginx.conf
          file:
            src: "{{ working_dir }}/nginx/nginx_1.conf"
            dest: /etc/nginx/nginx.conf
            state: link
            force: yes
      when: not nginx_conf_status.stat.exists

    - name: Check if mysql.conf exists
      stat:
        path: "{{ working_dir }}/mysql/mysql_1.conf"
      register: mysql_conf_status

    - name: Copy and link mysql.conf
      block:
        # バックアップ用にコピー
        - name: Copy mysql.conf for backup
          copy:
            src: /etc/mysql/mysql.cnf
            dest: /etc/mysql/mysql.conf.bak
            remote_src: yes

        - name: Copy mysql.conf to target directory
          copy:
            src: /etc/mysql/mysql.cnf
            dest: "{{ working_dir }}/mysql/mysql_1.conf"
            remote_src: yes

        - name: Create symbolic link for mysql.conf
          file:
            src: "{{ working_dir }}/mysql/mysql_1.conf"
            dest: /etc/mysql/mysql.cnf
            state: link
            force: yes
      when: not mysql_conf_status.stat.exists

    - name: Check if there are changes in the repository
      shell: git status --porcelain
      args:
        chdir: "{{ working_dir }}"
      register: git_status_output
    - name: Push changes to remote repository
      shell: |
        git add .
        git commit -m "add symbolic links for host1"
        git branch -M main
        git push origin main
      args:
        chdir: "{{ working_dir }}"
      when: git_status_output.stdout != ""

- name: Setup Symbolic Links for host2
  hosts: host2
  vars_files:
    - vars.yml
  become: yes

  tasks:
    # .gitが存在するかチェック
    - name: Check if the repository is already initialized
      stat:
        path: "{{ working_dir }}/.git"
      register: repo_status

    - name: Setup Git remote repository
      shell: |
        git init
        git remote add origin {{ git_repo_path }}
        git fetch origin main
        git reset --hard origin/main
      args:
        chdir: "{{ working_dir }}"
      when: not repo_status.stat.exists

    - name: Check if nginx.conf exists
      stat:
        path: "{{ working_dir }}/nginx/nginx_2.conf"
      register: nginx_conf_status

    - name: Copy and link nginx.conf
      block:
        # バックアップ用にコピー
        - name: Copy nginx.conf for backup
          copy:
            src: /etc/nginx/nginx.conf
            dest: /etc/nginx/nginx.conf.bak
            remote_src: yes

        - name: Copy nginx.conf to target directory
          copy:
            src: /etc/nginx/nginx.conf
            dest: "{{ working_dir }}/nginx/nginx_2.conf"
            remote_src: yes

        - name: Create symbolic link for nginx.conf
          file:
            src: "{{ working_dir }}/nginx/nginx_2.conf"
            dest: /etc/nginx/nginx.conf
            state: link
            force: yes
      when: not nginx_conf_status.stat.exists

    - name: Check if mysql.conf exists
      stat:
        path: "{{ working_dir }}/mysql/mysql_2.conf"
      register: mysql_conf_status

    - name: Copy and link mysql.conf
      block:
        # バックアップ用にコピー
        - name: Copy mysql.conf for backup
          copy:
            src: /etc/mysql/mysql.conf
            dest: /etc/mysql/mysql.conf.bak
            remote_src: yes

        - name: Copy mysql.conf to target directory
          copy:
            src: /etc/mysql/mysql.conf
            dest: "{{ working_dir }}/mysql/mysql_2.conf"
            remote_src: yes

        - name: Create symbolic link for mysql.conf
          file:
            src: "{{ working_dir }}/mysql/mysql_2.conf"
            dest: /etc/mysql/mysql.conf
            state: link
            force: yes
      when: not mysql_conf_status.stat.exists

    - name: Check if there are changes in the repository
      shell: git status --porcelain
      args:
        chdir: "{{ working_dir }}"
      register: git_status_output
    - name: Push changes to remote repository
      shell: |
        git add .
        git commit -m "add symbolic links for host2"
        git branch -M main
        git push origin main
      args:
        chdir: "{{ working_dir }}"
      when: git_status_output.stdout != ""

- name: Setup Symbolic Links for host3
  hosts: host3
  vars_files:
    - vars.yml
  become: yes

  tasks:
    # .gitが存在するかチェック
    - name: Check if the repository is already initialized
      stat:
        path: "{{ working_dir }}/.git"
      register: repo_status

    - name: Setup Git remote repository
      shell: |
        git init
        git remote add origin {{ git_repo_path }}
        git fetch origin main
        git reset --hard origin/main
      args:
        chdir: "{{ working_dir }}"
      when: not repo_status.stat.exists

    - name: Check if nginx.conf exists
      stat:
        path: "{{ working_dir }}/nginx/nginx_3.conf"
      register: nginx_conf_status

    - name: Copy and link nginx.conf
      block:
        # バックアップ用にコピー
        - name: Copy nginx.conf for backup
          copy:
            src: /etc/nginx/nginx.conf
            dest: /etc/nginx/nginx.conf.bak
            remote_src: yes

        - name: Copy nginx.conf to target directory
          copy:
            src: /etc/nginx/nginx.conf
            dest: "{{ working_dir }}/nginx/nginx_3.conf"
            remote_src: yes

        - name: Create symbolic link for nginx.conf
          file:
            src: "{{ working_dir }}/nginx/nginx_3.conf"
            dest: /etc/nginx/nginx.conf
            state: link
            force: yes
      when: not nginx_conf_status.stat.exists

    - name: Check if mysql.conf exists
      stat:
        path: "{{ working_dir }}/mysql/mysql_3.conf"
      register: mysql_conf_status

    - name: Copy and link mysql.conf
      block:
        # バックアップ用にコピー
        - name: Copy mysql.conf for backup
          copy:
            src: /etc/mysql/mysql.conf
            dest: /etc/mysql/mysql.conf.bak
            remote_src: yes

        - name: Copy mysql.conf to target directory
          copy:
            src: /etc/mysql/mysql.conf
            dest: "{{ working_dir }}/mysql/mysql_3.conf"
            remote_src: yes

        - name: Create symbolic link for mysql.conf
          file:
            src: "{{ working_dir }}/mysql/mysql_3.conf"
            dest: /etc/mysql/mysql.conf
            state: link
            force: yes
      when: not mysql_conf_status.stat.exists

    - name: Check if there are changes in the repository
      shell: git status --porcelain
      args:
        chdir: "{{ working_dir }}"
      register: git_status_output
    - name: Push changes to remote repository
      shell: |
        git add .
        git commit -m "add symbolic links for host3"
        git branch -M main
        git push origin main
      args:
        chdir: "{{ working_dir }}"
      when: git_status_output.stdout != ""

- name: Setup tbls
  hosts: host1
  vars_files:
    - vars.yml
  become: yes

  tasks:
    - name: Install required packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - wget
        - mysql-client

    - name: Download tbls binary
      get_url:
        url: "https://github.com/k1LoW/tbls/releases/download/v1.79.4/tbls_v1.79.4_linux_amd64.tar.gz"
        dest: "/tmp/tbls.tar.gz"

    - name: Extract tbls binary
      unarchive:
        src: "/tmp/tbls.tar.gz"
        dest: "{{ tbls_install_dir }}"
        remote_src: yes

    - name: Ensure tbls is executable
      file:
        path: "{{ tbls_install_dir }}/tbls"
        mode: "0755"

    - name: Create directories for tbls
      file:
        path: "{{ working_dir }}/tbls"
        state: directory
        mode: '0755'

    - name: Create tbls config.yml
      copy:
        dest: "{{ working_dir }}/tbls/config.yml"
        content: |
          dsn: "{{ db_url }}"
          docPath: "{{ working_dir }}/tbls"

    - name: Generate ER diagram using tbls
      shell: tbls doc --force
      args:
        chdir: "{{ working_dir }}/tbls"

    - name: Push changes to remote repository
      shell: |
        git add .
        git commit -m "add tbls ER diagram"
        git switch main
        git push origin main
